<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>风连广宇的萌萌哒小博客</title>
  
  
  <link href="https://zhengluoliudao.github.io/atom.xml" rel="self"/>
  
  <link href="https://zhengluoliudao.github.io/"/>
  <updated>2022-01-02T09:20:18.084Z</updated>
  <id>https://zhengluoliudao.github.io/</id>
  
  <author>
    <name>momentum</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据挖掘知识点汇总</title>
    <link href="https://zhengluoliudao.github.io/2022/01/02/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB/"/>
    <id>https://zhengluoliudao.github.io/2022/01/02/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB/</id>
    <published>2022-01-02T09:18:36.000Z</published>
    <updated>2022-01-02T09:20:18.084Z</updated>
    
    <content type="html"><![CDATA[<h4 id="预处理"><a href="#预处理" class="headerlink" title="预处理"></a>预处理</h4><p>数据质量的度量：准确性，完整性，一致性，及时性，可信度，可解释性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">数据预处理的主要任务：</span><br><span class="line">数据清理：</span><br><span class="line">对丢失数据，忽略元组或手工/自动填写</span><br><span class="line">对噪声数据，binning（分类再进行数据平滑）, 回归拟合，检测噪声并去除，计算机人工联合检测</span><br><span class="line">对不一致数据，函数依赖项，人工规则</span><br><span class="line">数据简化：</span><br><span class="line">降维：PCA，奇异值分解</span><br><span class="line">数字缩减：回归和对数线性模型，直方图/聚类/采样，数据立方体聚合</span><br><span class="line">数据压缩：</span><br><span class="line">数据转换和数据离散化</span><br><span class="line"></span><br><span class="line">归一化：</span><br><span class="line">min-max归一化：(x-min)/(max-min)</span><br><span class="line">z-score归一化：x-均值/方差</span><br><span class="line"></span><br><span class="line">预处理的作用：缩减数据规模，整理数据形式；有效清理数据，增加数据分析都有效性和准确性</span><br><span class="line">预处理的步骤有哪些：数据抽样和过滤，数据标准化和归一化，数据清洗</span><br></pre></td></tr></table></figure><p><img src="C:\Users\pyx\AppData\Roaming\Typora\typora-user-images\image-20211130144505039.png" alt="image-20211130144505039"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PCA：捕捉有最大变化量的投影。找协方差矩阵的特征向量</span><br><span class="line">步骤：1，归一化S（减去均值）    </span><br><span class="line"> 2，计算C=S^TS   </span><br><span class="line"> 3，计算特征值和特征向量，特征向量即是主成分       |A-λE|=0，</span><br><span class="line">     4，P=SU，U为特征向量的拼接</span><br><span class="line">     </span><br><span class="line">行列式计算：主对角线元素积与副对角线元素积的差</span><br><span class="line">计算特征值和特征向量：解|A-λE|=0得特征向量，再代入|A-λE|，求得基础解系，归一化即得到特征向量，拼接特征向量得到U投影矩阵</span><br></pre></td></tr></table></figure><p><img src="C:\Users\pyx\AppData\Roaming\Typora\typora-user-images\image-20211130181727628.png" alt="image-20211130181727628"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SVD：A=UsigmaV</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">皮尔逊相关系数：x和y的协方差除以x和y的标准差（注意都是除以n-1）</span><br><span class="line">Jaccard相似度：同为1/不同为0</span><br></pre></td></tr></table></figure><p><img src="C:\Users\pyx\AppData\Roaming\Typora\typora-user-images\image-20211130214856248.png" alt="image-20211130214856248"></p><p><img src="C:\Users\pyx\AppData\Roaming\Typora\typora-user-images\image-20211202105030022.png" alt="image-20211202105030022"></p><h4 id="序列数据挖掘"><a href="#序列数据挖掘" class="headerlink" title="序列数据挖掘"></a>序列数据挖掘</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GSP：</span><br><span class="line">先得到频繁一项集，再反复进行：生成候选，剪枝，计数，淘汰</span><br><span class="line"></span><br><span class="line">1）连接阶段：如果去掉序列模式S1的第一个项目与去掉序列模式S2的最后一个项目所得到的序列相同，则可以将S1与S2进行连接，即将S2的最后一个项目添加到S1中。</span><br><span class="line">2）剪切阶段：若某候选序列模式的某个子序列不是序列模式，则此候选序列不可能是序列模式，将它从候选序列模式中删除。</span><br></pre></td></tr></table></figure><p><img src="C:\Users\pyx\AppData\Roaming\Typora\typora-user-images\image-20211203012723757.png" alt="image-20211203012723757"></p><h4 id="图挖掘"><a href="#图挖掘" class="headerlink" title="图挖掘"></a>图挖掘</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Gspan:</span><br><span class="line">1、遍历所有的图，计算出所有的边和点的频度。</span><br><span class="line">2、将频度与最小支持度数做比较，移除不频繁的边和点。</span><br><span class="line">3、重新将剩下的点和边按照频度进行排序，将他们的排名号给边和点进行重新标号。</span><br><span class="line">4、再次计算每条边的频度，计算完后，然后初始化每条边，并且进行此边的subMining()挖掘过程。</span><br></pre></td></tr></table></figure><p><img src="C:\Users\pyx\AppData\Roaming\Typora\typora-user-images\image-20211203105021034.png" alt="image-20211203105021034"></p><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">决策树：</span><br><span class="line">如何确定分类属性：基尼指数，熵（最大化增益）（增益比），分类误差</span><br><span class="line">如何确定停止分类：所有记录属于同一类，所有记录属性值相同，没有剩余属性</span><br><span class="line">避免过拟合：预修剪pre-pruning（提前停止），post-pruning（可以用MDL）</span><br></pre></td></tr></table></figure><p><img src="C:\Users\pyx\AppData\Roaming\Typora\typora-user-images\image-20211201162105742.png" alt="image-20211201162105742"></p><p><img src="C:\Users\pyx\AppData\Roaming\Typora\typora-user-images\image-20211201162354111.png" alt="image-20211201162354111"></p><p><img src="C:\Users\pyx\AppData\Roaming\Typora\typora-user-images\image-20211201170412634.png" alt="image-20211201170412634"></p><p><img src="C:\Users\pyx\AppData\Roaming\Typora\typora-user-images\image-20211201170819820.png" alt="image-20211201170819820"></p><p><img src="C:\Users\pyx\AppData\Roaming\Typora\typora-user-images\image-20211201173617851.png" alt="image-20211201173617851"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ROC：横坐标FPR，纵坐标TPR，随阈值变化</span><br></pre></td></tr></table></figure><p><img src="C:\Users\pyx\AppData\Roaming\Typora\typora-user-images\image-20211201201247406.png" alt="image-20211201201247406"></p><p><img src="C:\Users\pyx\AppData\Roaming\Typora\typora-user-images\image-20211201201828986.png" alt="image-20211201201828986"></p><p><img src="C:\Users\pyx\AppData\Roaming\Typora\typora-user-images\image-20211201201855128.png" alt="image-20211201201855128"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">K近邻：k个最近的里投票</span><br><span class="line">问题：距离公式，K的选择，属性值缩放归一化，维度</span><br><span class="line">贝叶斯分类器：最大化后验概率</span><br><span class="line">贝叶斯网络：</span><br></pre></td></tr></table></figure><p><img src="C:\Users\pyx\AppData\Roaming\Typora\typora-user-images\image-20211201212957593.png" alt="image-20211201212957593"></p><p><img src="C:\Users\pyx\AppData\Roaming\Typora\typora-user-images\image-20211201221646775.png" alt="image-20211201221646775"></p><h4 id="聚类"><a href="#聚类" class="headerlink" title="聚类"></a>聚类</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">分区聚类和层次聚类</span><br><span class="line">聚类的类型：分离良好的，基于中心的，基于邻近的</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">基于密度的聚类：</span><br><span class="line">DBSCAN算法：核心点，边界点，噪声点</span><br><span class="line">在彼此Eps内的任何两个核心点都在同一个聚类中，核心点Eps内的点都在同一个聚类</span><br><span class="line">部分聚类方法，时间复杂度O(n^2)，允许不准确则可以到O(n)</span><br><span class="line">确定Eps和MinPts</span><br><span class="line"></span><br><span class="line">基于网格的聚类：划分网格，计算网格密度，消除密度低于阈值的网格，连续网格形成簇</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">层次聚类：嵌套聚类</span><br><span class="line">凝聚：合并最接近的聚类，更新邻近矩阵，循环</span><br><span class="line">聚类间距离：最小，最大，平均，质心，沃德法（平方差SSE变化量，每个值减去合并后的均值，平方再求和）</span><br><span class="line">分裂：</span><br><span class="line">cure算法（使用代表点）</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">K-means：循环：选中心，根据距离分类</span><br></pre></td></tr></table></figure><h4 id="关联分析"><a href="#关联分析" class="headerlink" title="关联分析"></a>关联分析</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">频繁项集：</span><br><span class="line">Apriori算法：</span><br><span class="line">剪枝：任意频繁项集的非空子集也是频繁的</span><br><span class="line"></span><br><span class="line">FP-growth:</span><br><span class="line">建立频繁一项集，剪枝删除没达到支持度的节点，按照支持度排序重排原集合（不要忘了这个）</span><br><span class="line">建立FP-树</span><br><span class="line">从树底E出发，建立条件模式基，祖先节点计数置为叶子节点的计数，从而挖掘出含E的频繁项集</span><br><span class="line">递归挖掘频繁项集</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;预处理&quot;&gt;&lt;a href=&quot;#预处理&quot; class=&quot;headerlink&quot; title=&quot;预处理&quot;&gt;&lt;/a&gt;预处理&lt;/h4&gt;&lt;p&gt;数据质量的度量：准确性，完整性，一致性，及时性，可信度，可解释性&lt;/p&gt;
&lt;figure class=&quot;highlight plai</summary>
      
    
    
    
    
    <category term="数据挖掘" scheme="https://zhengluoliudao.github.io/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
  </entry>
  
  <entry>
    <title>2020年高级数据库试题</title>
    <link href="https://zhengluoliudao.github.io/2022/01/02/hello/"/>
    <id>https://zhengluoliudao.github.io/2022/01/02/hello/</id>
    <published>2022-01-02T08:08:02.000Z</published>
    <updated>2022-01-02T08:18:08.393Z</updated>
    
    <content type="html"><![CDATA[<hr><h5 id="⼀、简答题（数据库语⾔，共20分）"><a href="#⼀、简答题（数据库语⾔，共20分）" class="headerlink" title="⼀、简答题（数据库语⾔，共20分）"></a>⼀、简答题（数据库语⾔，共20分）</h5><ol><li>（8分）在图书管理数据库中，有如下三个关系：<br>图书信息关系：B(B#, BNAME, AUTHOR, TYPE)，其中B#为图书编号，BNAME为书名，<br>AUTHOR为作者，TYPE为图书类别；<br>学⽣信息关系：S(S#, SNAME, CLASS)，其中S#为学号，SNAME为学⽣姓名，CLASS为班级<br>号；<br>借阅信息关系：L(S#, B#, DATE)，其中S#为借阅⼈学号，B#为被借阅图书编号，DATE为借<br>阅⽇期。<br>使⽤关系代数回答下列问题：<br>a) （2分）查询借了《红楼梦》这本书的学⽣的姓名。<br>b) （2分）查询105班的所有学⽣全都借过的图书的编号。<br>c) （2分）查询“张三”同学借过，但是“李四“同学没有借过的书的编号。<br>d) （2分）编写⼀个查询，说明如何根据该查询的结果验证B的关系实例是否满⾜函数依赖<br>BNAME → B#。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">a)</span><br><span class="line">select SNAME </span><br><span class="line">from </span><br><span class="line">((B join L using B#) join S using S#)</span><br><span class="line">where BNAME = &quot;红楼梦&quot;  </span><br><span class="line"></span><br><span class="line">b)  #这里有一个关键词，全都，即借阅人数等于总人数，或者不存在人没选</span><br><span class="line">select B# </span><br><span class="line">from </span><br><span class="line">((B join L using B#) join S using S#) X</span><br><span class="line">where CLASS = 105 </span><br><span class="line">group by B#</span><br><span class="line">having count(*) = </span><br><span class="line">(select count(*) from </span><br><span class="line">((B join L using B#) join S using S#) Y</span><br><span class="line">where Y.CLASS = 105) </span><br><span class="line"></span><br><span class="line">select B# from</span><br><span class="line">((B join L using B#) join S using S#) X</span><br><span class="line">where CLASS = 105 and not exists</span><br><span class="line">(</span><br><span class="line">select * from </span><br><span class="line">((B join L using B#) join S using S#) Y</span><br><span class="line">where Y.CLASS = 105 and  X.B# != Y.B#</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">c) #这里有一个关键词，借过/学过，没借过/没学过</span><br><span class="line">select B# from </span><br><span class="line">((B join L using B#) join S using S#) X</span><br><span class="line">where </span><br><span class="line">&quot;张三&quot; in </span><br><span class="line">(select SNAME from </span><br><span class="line">((B join L using B#) join S using S#) Y</span><br><span class="line">where X.B# = Y.B#</span><br><span class="line">) Z</span><br><span class="line">and &quot;李四&quot; not in Z</span><br><span class="line"></span><br><span class="line">d) #验证函数依赖，即确定如果两本书书名相同，书号必相同，即根据书名找书号找不到两个</span><br><span class="line">select count(B#) from B</span><br><span class="line">group by BNAME</span><br><span class="line">如果不是全为1，则函数依赖不成立，反之成立</span><br></pre></td></tr></table></figure><ol><li><h5 id="（12分）在博客管理数据库中，有如下三个关系："><a href="#（12分）在博客管理数据库中，有如下三个关系：" class="headerlink" title="（12分）在博客管理数据库中，有如下三个关系："></a>（12分）在博客管理数据库中，有如下三个关系：</h5><p>⽤户信息关系：U(UID#，UNAME, UAGE, USEX)，该表包含属性UID#（⽤户ID）、<br>UNAME（⽤户姓名）、UAGE（⽤户年龄）、USEX（⽤户性别）。<br>博客信息关系：B(BID#，UID#，BTITLE，BCONTENT，BTIME)，该表包含属性BID#（博客<br>编号）、UID#（作者ID），BTITLE（博客标题），BCONTENT（博客内容），BTIME（博客<br>发布时间）。<br>评论信息关系：C(CID#, BID#, UID#, CCONTENT，CTIME)，该表包含属性CID#（评论编<br>号），BID#（被评论博客编号），UID#（评论者ID），CCONTENT（评论内容），<br>CTIME（评论时间）。<br>UID #、BID #、CID#分别为关系U、B、C的主键。使⽤SQL语⾔回答下列问题：<br>a) （3分）删除名为“张三”的⽤户发表的所有博客。<br>b) （3分）查询“张三”对“李四”发表的博客的评论总数。<br>c) （3分）定义⼀个视图SumU(UID#, UNAME, Year, Count#)，其中UID#为⽤户id，UNAME<br>为⽤户姓<br>名，Year为年份，Count#为该⽤户该年度发表博客的总数。<br>d)（3分）基于视图SumU，查询2019年发表博客数最多的⽤户的ID和姓名。</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">a)</span><br><span class="line">delete from B</span><br><span class="line">where UID in </span><br><span class="line">(</span><br><span class="line">select UID from U where U.UID = B.UID and UNAME = &quot;张三&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">b)</span><br><span class="line">select count(*) from C</span><br><span class="line">where BID in </span><br><span class="line">(</span><br><span class="line">select BID from B join U where UNAME = &quot;李四&quot;</span><br><span class="line">)</span><br><span class="line">and UID in </span><br><span class="line">(</span><br><span class="line">select BID from B join U where UNAME = &quot;张三&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">c)</span><br><span class="line">create view SumU as</span><br><span class="line">select X.UID# UID#, X.UNAME UNAME, </span><br><span class="line">Date_FORMAT(X.BTIME, &quot;%Y&quot;) Year, </span><br><span class="line">count(BID#) Count# </span><br><span class="line">from U join B using UID# X</span><br><span class="line">group by UID#, year</span><br><span class="line"></span><br><span class="line">d)  #关键词，最大, &gt;ALL , = MAX</span><br><span class="line">select UID#, BNAME</span><br><span class="line">from SumU X</span><br><span class="line">where Year = 2019 and </span><br><span class="line">count# &gt;= all</span><br><span class="line">(</span><br><span class="line">select count# from SumU where Year = 2019</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h5 id="⼆、计算与简答题（关系数据库理论，共18分）"><a href="#⼆、计算与简答题（关系数据库理论，共18分）" class="headerlink" title="⼆、计算与简答题（关系数据库理论，共18分）"></a>⼆、计算与简答题（关系数据库理论，共18分）</h5><p>已知关系模式R(A, B, C, D, E)上的函数依赖集F为{ AC → E; B → CE; C → B; AB → CD; AE → D }，回答下<br>列问题：</p><ol start="2"><li>（3分）求AC关于F的属性集闭包。</li><li>（3分）求R的候选键。</li><li>（4分）求F的最⼩覆盖。</li><li>（4分）将R分解为2个关系模式S(A, B, C)和T(A, B, D, E)，该分解是否是⽆损连接分解？说明理由。</li><li>（4分）将R进⾏分解⼀组3NF关系模式，使得该分解既是⽆损连接分解，⼜保持函数依赖。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1)</span><br><span class="line">闭包</span><br></pre></td></tr></table></figure><h5 id="三、论述题（共12分）"><a href="#三、论述题（共12分）" class="headerlink" title="三、论述题（共12分）"></a>三、论述题（共12分）</h5><p>结合你的数据库系统实践经历，回答下列问题：</p><ol><li>（4分）数据库的三级模式和两级映像架构对数据库系统有何重要意义？</li><li>（4分）在设计⼤型关系数据库时，遵照“概念设计→逻辑设计→物理设计”的设计过程有何好处？</li><li>（4分）数据库管理系统的缓冲区管理与操作系统的虚拟内存管理有何不同之处？</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="四、分析与简答题（数据库管理系统实现，共34分）"><a href="#四、分析与简答题（数据库管理系统实现，共34分）" class="headerlink" title="四、分析与简答题（数据库管理系统实现，共34分）"></a>四、分析与简答题（数据库管理系统实现，共34分）</h5><ol><li>（6分）使⽤可扩展hash表存储整型元素。设hash函数为h(x) = x mod 16，h(x)的结果是⼀个4位<br>⼆进制序列，其前d位⽤于确定元素x属于哪个桶。设每个桶中⾄多包含2个元素。现将下列元素依<br>次添加到hash表中：5, 19, 24, 26, 35, 48, 53, 61。初始时，hash表为空，且d = 1。请画出添加完<br>上述所有元素后，最终得到的hash表。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><ol><li>（6分）关系R(a, b)和S(b, c)存储在磁盘上，分别占500和1000个磁盘块。R和S上既⽆索引，也未<br>按属性b排序。设可⽤内存缓冲区块数为M，回答下列问题：<br>a)（3分）如果M = 50，那么使⽤哪种连接算法执⾏R ⨝ S效率最⾼？I/O代价是多少？<br>b)（3分）如果M = 126，那么使⽤哪种连接算法执⾏R ⨝ S效率最⾼？I/O代价是多少？</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a)哈希，4500</span><br><span class="line">b)哈希</span><br></pre></td></tr></table></figure><ol><li>（6分）设教学管理数据库有如下3个关系模式：<br>EMPLOYEE(ESSN#, ENAME, SALARY, DNO#)<br>PROJECT(PNO#, PNAME)<br>WORKS_ON(ESSN#, PNO#)<br>DEPARTMENT(DNO#, DNAME)<br>⽤户给出以下SQL语句：<br>SELECT ENAME<br>FROM EMPLOYEE, WORKS_ON, PROJECT<br>WHERE SALARY &lt; 3000 AND PROJECT.PNO = ‘P1’<br>AND EMPLOYEE.ESSN# = WORKS_ON.ESSN# AND WORKS_ON.PNO# = PROJECT.PNO#;<br>回答下列问题：<br>a) （3分）写出该SQL语句对应的关系代数表达式，并画出该表达式对应的逻辑查询计划树。<br>b) （3分）使⽤启发式查询优化⽅法对以上查询计划进⾏优化，并画出优化后的逻辑查询计划<br>树。</li></ol><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h5 id=&quot;⼀、简答题（数据库语⾔，共20分）&quot;&gt;&lt;a href=&quot;#⼀、简答题（数据库语⾔，共20分）&quot; class=&quot;headerlink&quot; title=&quot;⼀、简答题（数据库语⾔，共20分）&quot;&gt;&lt;/a&gt;⼀、简答题（数据库语⾔，共20分）&lt;/h5&gt;&lt;ol&gt;
&lt;li</summary>
      
    
    
    
    
    <category term="DataBase" scheme="https://zhengluoliudao.github.io/tags/DataBase/"/>
    
  </entry>
  
</feed>
